{"version":3,"file":"plugin.cjs.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["var _a, _b;\nimport { registerPlugin } from '@capacitor/core';\nconst NFCPlug = registerPlugin('NFC', {\n    // Explicit .js extension required under node16/nodenext module resolution for emitted ES modules.\n    web: () => import('./web.js').then((m) => new m.NFCWeb()),\n});\nexport * from './definitions.js';\nexport const NFC = {\n    isSupported: NFCPlug.isSupported.bind(NFCPlug),\n    startScan: (options) => {\n        const normalizedOptions = {};\n        if (options) {\n            for (const [key, value] of Object.entries(options)) {\n                if (value !== undefined && value !== null) {\n                    normalizedOptions[key] = value;\n                }\n            }\n        }\n        return NFCPlug.startScan(normalizedOptions);\n    },\n    cancelScan: (_b = (_a = NFCPlug.cancelScan) === null || _a === void 0 ? void 0 : _a.bind(NFCPlug)) !== null && _b !== void 0 ? _b : (async () => {\n        /* Android no-op */\n    }),\n    cancelWriteAndroid: NFCPlug.cancelWriteAndroid.bind(NFCPlug),\n    onRead: (func) => {\n        NFC.wrapperListeners.push(func);\n        // Return unsubscribe function\n        return () => {\n            NFC.wrapperListeners = NFC.wrapperListeners.filter((l) => l !== func);\n        };\n    },\n    onWrite: (func) => {\n        let handle;\n        NFCPlug.addListener(`nfcWriteSuccess`, func).then((h) => (handle = h));\n        return () => {\n            var _a;\n            try {\n                (_a = handle === null || handle === void 0 ? void 0 : handle.remove) === null || _a === void 0 ? void 0 : _a.call(handle);\n            }\n            catch (_b) {\n                /* empty */\n            }\n        };\n    },\n    onError: (errorFn) => {\n        let handle;\n        NFCPlug.addListener(`nfcError`, errorFn).then((h) => (handle = h));\n        return () => {\n            var _a;\n            try {\n                (_a = handle === null || handle === void 0 ? void 0 : handle.remove) === null || _a === void 0 ? void 0 : _a.call(handle);\n            }\n            catch (_b) {\n                /* empty */\n            }\n        };\n    },\n    removeAllListeners: (eventName) => {\n        NFC.wrapperListeners = [];\n        return NFCPlug.removeAllListeners(eventName);\n    },\n    wrapperListeners: [],\n    async writeNDEF(options) {\n        var _a;\n        // Helper encoders for well-known record types (only applied to string payloads)\n        const buildTextPayload = (text, lang = 'en') => {\n            const langBytes = Array.from(new TextEncoder().encode(lang));\n            const textBytes = Array.from(new TextEncoder().encode(text));\n            const status = langBytes.length & 0x3f; // UTF-8 encoding, language length (<= 63)\n            return [status, ...langBytes, ...textBytes];\n        };\n        const buildUriPayload = (uri, prefixCode = 0x00) => {\n            const uriBytes = Array.from(new TextEncoder().encode(uri));\n            return [prefixCode, ...uriBytes];\n        };\n        const recordsArray = (_a = options === null || options === void 0 ? void 0 : options.records) !== null && _a !== void 0 ? _a : [];\n        if (recordsArray.length === 0)\n            throw new Error('At least one NDEF record is required');\n        const isRawMode = (options === null || options === void 0 ? void 0 : options.rawMode) === true;\n        const ndefMessage = {\n            records: recordsArray.map((record) => {\n                let payload = null;\n                if (typeof record.payload === 'string') {\n                    if (isRawMode) {\n                        // Raw mode: write string payloads as UTF-8 bytes without any framing\n                        payload = Array.from(new TextEncoder().encode(record.payload));\n                    }\n                    else {\n                        // Apply spec-compliant formatting only for Well Known Text (T) & URI (U) types.\n                        if (record.type === 'T') {\n                            payload = buildTextPayload(record.payload);\n                        }\n                        else if (record.type === 'U') {\n                            payload = buildUriPayload(record.payload);\n                        }\n                        else {\n                            // Generic string: raw UTF-8 bytes (no extra framing)\n                            payload = Array.from(new TextEncoder().encode(record.payload));\n                        }\n                    }\n                }\n                else if (Array.isArray(record.payload)) {\n                    // Assume already raw bytes; do NOT modify\n                    payload = record.payload;\n                }\n                else if (record.payload instanceof Uint8Array) {\n                    payload = Array.from(record.payload);\n                }\n                if (!payload)\n                    throw new Error('Unsupported payload type');\n                return { type: record.type, payload };\n            }),\n        };\n        await NFCPlug.writeNDEF(ndefMessage);\n    },\n};\n// Decode a base64 string into a Uint8Array (browser-safe). Existing code used atob already.\nconst decodeBase64ToBytes = (base64Payload) => {\n    const bin = atob(base64Payload);\n    const out = new Uint8Array(bin.length);\n    for (let i = 0; i < bin.length; i++)\n        out[i] = bin.charCodeAt(i);\n    return out;\n};\n// Parse NFC Forum \"Text\" (Well Known 'T') records according to spec.\nconst decodeTextRecord = (bytes) => {\n    if (bytes.length === 0)\n        return '';\n    const status = bytes[0];\n    const isUTF16 = (status & 0x80) !== 0; // Bit 7 indicates encoding\n    const langLength = status & 0x3f; // Bits 0-5 language code length\n    if (1 + langLength > bytes.length)\n        return ''; // Corrupt\n    const textBytes = bytes.slice(1 + langLength);\n    try {\n        const decoder = new TextDecoder(isUTF16 ? 'utf-16' : 'utf-8');\n        return decoder.decode(textBytes);\n    }\n    catch (_a) {\n        // Fallback: naive ASCII\n        return Array.from(textBytes)\n            .map((b) => String.fromCharCode(b))\n            .join('');\n    }\n};\n// Basic URI prefix table for Well Known 'U' records (optional convenience)\nconst URI_PREFIX = [\n    '',\n    'http://www.',\n    'https://www.',\n    'http://',\n    'https://',\n    'tel:',\n    'mailto:',\n    'ftp://anonymous:anonymous@',\n    'ftp://ftp.',\n    'ftps://',\n    'sftp://',\n    'smb://',\n    'nfs://',\n    'ftp://',\n    'dav://',\n    'news:',\n    'telnet://',\n    'imap:',\n    'rtsp://',\n    'urn:',\n    'pop:',\n    'sip:',\n    'sips:',\n    'tftp:',\n    'btspp://',\n    'btl2cap://',\n    'btgoep://',\n    'tcpobex://',\n    'irdaobex://',\n    'file://',\n    'urn:epc:id:',\n    'urn:epc:tag:',\n    'urn:epc:pat:',\n    'urn:epc:raw:',\n    'urn:epc:',\n    'urn:nfc:',\n];\nconst decodeUriRecord = (bytes) => {\n    if (bytes.length === 0)\n        return '';\n    const prefixIndex = bytes[0];\n    const prefix = URI_PREFIX[prefixIndex] || '';\n    const remainder = bytes.slice(1);\n    try {\n        return prefix + new TextDecoder('utf-8').decode(remainder);\n    }\n    catch (_a) {\n        return (prefix +\n            Array.from(remainder)\n                .map((b) => String.fromCharCode(b))\n                .join(''));\n    }\n};\nconst toStringPayload = (recordType, bytes) => {\n    // Well Known Text\n    if (recordType === 'T')\n        return decodeTextRecord(bytes);\n    // Well Known URI\n    if (recordType === 'U')\n        return decodeUriRecord(bytes);\n    // Default: attempt UTF-8 decode\n    try {\n        return new TextDecoder('utf-8').decode(bytes);\n    }\n    catch (_a) {\n        return Array.from(bytes)\n            .map((c) => String.fromCharCode(c))\n            .join('');\n    }\n};\nconst mapPayloadTo = (type, data) => {\n    return {\n        messages: data.messages.map((message) => ({\n            records: message.records.map((record) => {\n                const bytes = decodeBase64ToBytes(record.payload);\n                let payload;\n                switch (type) {\n                    case 'b64':\n                        payload = record.payload; // original base64 string\n                        break;\n                    case 'uint8Array':\n                        payload = bytes;\n                        break;\n                    case 'numberArray':\n                        payload = Array.from(bytes);\n                        break;\n                    case 'string':\n                        payload = toStringPayload(record.type, bytes);\n                        break;\n                    default:\n                        payload = record.payload;\n                }\n                return { type: record.type, payload };\n            }),\n        })),\n        tagInfo: data.tagInfo, // Include tag information\n    };\n};\nNFCPlug.addListener(`nfcTag`, (data) => {\n    const wrappedData = {\n        base64() {\n            return mapPayloadTo('b64', data);\n        },\n        string() {\n            return mapPayloadTo('string', data);\n        },\n        uint8Array() {\n            return mapPayloadTo('uint8Array', data);\n        },\n        numberArray() {\n            return mapPayloadTo('numberArray', data);\n        },\n    };\n    for (const listener of NFC.wrapperListeners) {\n        listener(wrappedData);\n    }\n});\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class NFCWeb extends WebPlugin {\n    async isSupported() {\n        return { supported: false };\n    }\n    async startScan(_options) {\n        throw new Error('NFC is not supported on web');\n    }\n    async cancelScan() {\n        throw new Error('NFC is not supported on web');\n    }\n    async cancelWriteAndroid() {\n        throw new Error('NFC is not supported on web');\n    }\n    async writeNDEF(_options) {\n        throw new Error('NFC is not supported on web');\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin"],"mappings":"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"}